//
// Generated file, do not edit! Created by opp_msgc 4.1 from overlay/denacastoverlay/DenaCastTrackerMessage.msg.
//

#ifndef _DENACASTTRACKERMESSAGE_M_H_
#define _DENACASTTRACKERMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include <TransportAddress.h>
#include <CommonMessages_m.h>


static const int TRACKERCOMMAND_L = 3;
#define TRACKERMESSAGE_L(msg) ( TRANSPORTADDRESS_L + TRACKERCOMMAND_L + BASEOVERLAY_L(msg))
// }}



/**
 * Enum generated from <tt>overlay/denacastoverlay/DenaCastTrackerMessage.msg</tt> by opp_msgc.
 * <pre>
 * enum TRACKERCommand
 * {
 *     NEIGHBOR_REQUEST = 0;    
 *     NEIGHBOR_RESPONSE = 1;    
 *     SELF_REGISTER = 3;		
 *     SELF_UNREGISTER = 4;
 *     REMAIN_NEIGHBOR = 5;
 * }
 * </pre>
 */
enum TRACKERCommand {
    NEIGHBOR_REQUEST = 0,
    NEIGHBOR_RESPONSE = 1,
    SELF_REGISTER = 3,
    SELF_UNREGISTER = 4,
    REMAIN_NEIGHBOR = 5
};

/**
 * Class generated from <tt>overlay/denacastoverlay/DenaCastTrackerMessage.msg</tt> by opp_msgc.
 * <pre>
 * packet DenaCastTrackerMessage extends BaseOverlayMessage 
 * {
 *     int command @enum(TRACKERCommand);
 * 	TransportAddress srcNode;
 * 	TransportAddress neighbors[];
 * 	int neighborSize;
 * 	bool isServer;
 * 	int remainNeighbor;
 * }
 * </pre>
 */
class DenaCastTrackerMessage : public ::BaseOverlayMessage
{
  protected:
    int command_var;
    ::TransportAddress srcNode_var;
    ::TransportAddress *neighbors_var; // array ptr
    unsigned int neighbors_arraysize;
    int neighborSize_var;
    bool isServer_var;
    int remainNeighbor_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DenaCastTrackerMessage&);

  public:
    DenaCastTrackerMessage(const char *name=NULL, int kind=0);
    DenaCastTrackerMessage(const DenaCastTrackerMessage& other);
    virtual ~DenaCastTrackerMessage();
    DenaCastTrackerMessage& operator=(const DenaCastTrackerMessage& other);
    virtual DenaCastTrackerMessage *dup() const {return new DenaCastTrackerMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getCommand() const;
    virtual void setCommand(int command_var);
    virtual TransportAddress& getSrcNode();
    virtual const TransportAddress& getSrcNode() const {return const_cast<DenaCastTrackerMessage*>(this)->getSrcNode();}
    virtual void setSrcNode(const TransportAddress& srcNode_var);
    virtual void setNeighborsArraySize(unsigned int size);
    virtual unsigned int getNeighborsArraySize() const;
    virtual TransportAddress& getNeighbors(unsigned int k);
    virtual const TransportAddress& getNeighbors(unsigned int k) const {return const_cast<DenaCastTrackerMessage*>(this)->getNeighbors(k);}
    virtual void setNeighbors(unsigned int k, const TransportAddress& neighbors_var);
    virtual int getNeighborSize() const;
    virtual void setNeighborSize(int neighborSize_var);
    virtual bool getIsServer() const;
    virtual void setIsServer(bool isServer_var);
    virtual int getRemainNeighbor() const;
    virtual void setRemainNeighbor(int remainNeighbor_var);
};

inline void doPacking(cCommBuffer *b, DenaCastTrackerMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, DenaCastTrackerMessage& obj) {obj.parsimUnpack(b);}


#endif // _DENACASTTRACKERMESSAGE_M_H_
